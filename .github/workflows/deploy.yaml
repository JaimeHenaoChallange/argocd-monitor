  Crea un archivo `.github/workflows/deploy.yaml` en tu repositorio:

  ```yaml
  name: Build, Push, and Deploy

  on:
    push:
      branches:
        - main  # O la rama que quieras usar

  jobs:
    build-and-push:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials  #SOLO si usas AWS ECR.
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}  # ej: us-east-1

      - name: Login to Amazon ECR #SOLO si usas AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx #SOLO si usas AWS ECR
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub  #Si usas Docker Hub
        if: ${{ !env.ECR_REGISTRY }} #Condicional para evitar doble login.
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Get current tag from values.yaml
        id: get-tag
        run: echo "current_tag=$(yq e '.image.tag' chart/argocd-monitor/values.yaml)" >> $GITHUB_OUTPUT


      - name: Increment version
        id: increment-version
        run: |
          version="${{ steps.get-tag.outputs.current_tag }}"
          major=$(echo "$version" | cut -d. -f1)
          minor=$(echo "$version" | cut -d. -f2)
          patch=$(echo "$version" | cut -d. -f3)
          new_patch=$((patch + 1))
          new_version="$major.$minor.$new_patch"
          echo "new_tag=$new_version" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
             ${{ secrets.DOCKERHUB_USERNAME }}/argocd-monitor:${{ steps.increment-version.outputs.new_tag }}
             ${{ secrets.DOCKERHUB_USERNAME }}/argocd-monitor:latest #Etiqueta latest, opcional.
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update values.yaml
        run: |
          yq e ".image.tag = \"${{ steps.increment-version.outputs.new_tag }}\"" -i chart/argocd-monitor/values.yaml
          yq e ".image.repository = \"${{ secrets.DOCKERHUB_USERNAME }}/argocd-monitor\"" -i chart/argocd-monitor/values.yaml

      - name: Commit changes
        run: |
         git config --global user.name "Workflow"
         git config --global user.email "<>"
         git commit -am "Bump version to ${{ steps.increment-version.outputs.new_tag }}" || true

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}


    deploy:  #Este job depende del anterior
      needs: build-and-push
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.8.1  # O una versión más reciente

      - name: Deploy to Kubernetes
        run: |
          helm upgrade --install argocd-monitor chart/argocd-monitor \
            --namespace argocd \
            --set config.slackWebhookUrl="${{ secrets.SLACK_WEBHOOK_URL }}" \
            --set image.tag=${{ needs.build-and-push.outputs.new_tag }} \
            --set image.repository=${{ secrets.DOCKERHUB_USERNAME }}/argocd-monitor
  ```
